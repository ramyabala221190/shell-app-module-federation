apiVersion: apps/v1
kind: Deployment
metadata:
 name: {{.Chart.Name}}-deployment-{{.Values.environment}}
 labels:
  app: {{.Chart.Name}}-deployment-{{.Values.environment}}

spec:
  selector:
    matchLabels:
      app: {{.Chart.Name}}-deployment-{{.Values.environment}}

  template:
    metadata:
      labels:
        app: {{.Chart.Name}}-deployment-{{.Values.environment}}

    spec:
     containers:
       - name : {{.Chart.Name}}-{{.Values.pod.containerName}}-{{.Values.environment}}
         image: {{.Values.pod.imageName}}
         ports:
          - containerPort : {{.Values.pod.containerPort}} #this should match the port nginx listening on
         volumeMounts:
         - name: {{.Values.config.volume}}
           mountPath: /{{.Values.config.mountPath}}
           readOnly: true
         - name: common-{{.Values.config.volume}}
           mountPath: /{{.Values.config.mountPath}}
           readOnly: true
         env:
           - name: remoteAPort
             valueFrom:
               configMapKeyRef:
                  name: {{.Values.environment}}-{{.Values.config.name}}
                  key: remoteAPort
           - name: remoteBPort
             valueFrom:
               configMapKeyRef:
                  name: {{.Values.environment}}-{{.Values.config.name}}
                  key: remoteBPort
           - name: env
             valueFrom:
               configMapKeyRef:
                  name: {{.Values.environment}}-{{.Values.config.name}}
                  key: env
           - name: nginxPort
             valueFrom:
               configMapKeyRef:
                  name: common-{{.Values.config.name}}
                  key: nginxPort
           - name: dockerHost
             valueFrom:
               configMapKeyRef:
                  name: common-{{.Values.config.name}}
                  key: dockerHost
           - name: remoteAName
             valueFrom:
               configMapKeyRef:
                  name: common-{{.Values.config.name}}
                  key: remoteAName
           - name: remoteBName
             valueFrom:
               configMapKeyRef:
                  name: common-{{.Values.config.name}}
                  key: remoteBName
           - name: hostName
             valueFrom:
               configMapKeyRef:
                  name: common-{{.Values.config.name}}
                  key: hostName
     volumes:
     - name: {{.Values.config.volume}}
       configMap:
         name: {{.Values.environment}}-{{.Values.config.name}}
     - name: common-{{.Values.config.volume}}
       configMap:
         name: common-{{.Values.config.name}}


#we are loading all environment variables from the config map with name :dev-app-config


#helm install helm-release helm-test
#helm upgrade helm-release helm-test